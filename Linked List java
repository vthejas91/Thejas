/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author tviswan1
 */
public class Node {
    int value;
    Node next;
    
    public void CreateNodeNode(int val)
    {
        value = val;
        next = null ;
    }
       
  
    public void insertNode(int val)
    {
     
        Node n = this ;
        Node end = new Node();
        end.CreateNodeNode(val);
        if(n.value==0) 
        {
            n.value=end.value;
            n.next = end.next;
        }
        else
        {
         while(n.next != null)
        {
            n = n.next;
        }
          n.next = end;
        }
        
        
        
        
    }
    public Node DeleteNode(int val)
    {
        Node temp = this;
        Node n = this;
        if(n.value == val)
        {
            n = n.next;
            return n;
        }
        else
        {
            while(n.next.value != val)
            {
                n = n.next;
            }
            n.next = n.next.next;
            return temp;
        }
        
        
    }
    public Node del_m(int n)
    {
        Node d = this;
        Node t = this;
        for(int i=0;i<n;i++)
        {
            t=t.next;
            
        }
        Node temp =t.next;
        while(t.next!=null)
        {
            t.value = t.next.value;
            t.next = t.next.next;
            System.out.println(t.value+"t value");
            t=temp;
           
            System.out.println(temp.value+"temp value");
             temp = temp.next;
             
        }
              t=null;
        return d;
  
        
        
    }
    public void disp_n(int n)
    {
        Node t = this;
        if(t == null)
        {
            System.out.println("List is empty");
        }
        else
        {
            Node last = t;
            for(int i=0;i<n;i++)
            {
                last = last.next;
                if(last==null)
                    break;
            }
            if(last == null)
            {
                System.out.println("Elements not available");
            }
            else
            {
                while(last!=null)
                {
                    last = last.next;
                    t=t.next;
                }
                System.out.println(t.value);
            }
            
            
        }
    }
    
    public Node Add2Nos(Node a,Node b)
    {
        Node c = this;
        int carry=0;
        int val;
        while(a!=null)
        {
            val = a.value + b.value+carry;
            if(val>9)
            {
                carry = 1;
                val = val%10;            
                c.insertNode(val);
            }
            else
            {
                carry = 0;
                c.insertNode(val);
            }
            
            a=a.next;
            b=b.next;
        }
        
        
               
        return c;
    }
            
    public void display()
    {
        Node n = this;
        while(n != null)
        {
            System.out.println(n.value);
            n= n.next;
        }
        System.out.println("Display");
        
    }
        
    
    
}
